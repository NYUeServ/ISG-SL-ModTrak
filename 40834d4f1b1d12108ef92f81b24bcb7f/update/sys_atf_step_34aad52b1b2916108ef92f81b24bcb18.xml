<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes>Automated tests for utility methods on ChangeHelper.</notes>
        <order>3</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>ab7289</sys_created_by>
        <sys_created_on>2024-11-04 17:48:13</sys_created_on>
        <sys_id>34aad52b1b2916108ef92f81b24bcb18</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="ModTrak" source="x_neyu_modtrak">40834d4f1b1d12108ef92f81b24bcb7f</sys_package>
        <sys_policy/>
        <sys_scope display_value="ModTrak">40834d4f1b1d12108ef92f81b24bcb7f</sys_scope>
        <sys_update_name>sys_atf_step_34aad52b1b2916108ef92f81b24bcb18</sys_update_name>
        <sys_updated_by>ab7289</sys_updated_by>
        <sys_updated_on>2024-11-05 14:23:35</sys_updated_on>
        <table/>
        <test display_value="ModTrak ChangeHelper Script Include Tests">efcd38ef1b6516108ef92f81b24bcb83</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=34aad52b1b2916108ef92f81b24bcb18"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>34aad52b1b2916108ef92f81b24bcb18</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>ab7289</sys_created_by>
        <sys_created_on>2024-11-04 17:48:13</sys_created_on>
        <sys_id>77ba596b1b2916108ef92f81b24bcb6e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>ab7289</sys_updated_by>
        <sys_updated_on>2024-11-04 17:48:13</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>34aad52b1b2916108ef92f81b24bcb18</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>ab7289</sys_created_by>
        <sys_created_on>2024-11-04 17:48:13</sys_created_on>
        <sys_id>7fba596b1b2916108ef92f81b24bcb6e</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_updated_by>ab7289</sys_updated_by>
        <sys_updated_on>2024-11-05 14:23:35</sys_updated_on>
        <value>(function(outputs, steps, params, stepResult, assertEqual) {&#13;
&#13;
    describe("ChangeHelper Utility Method tests", function() {&#13;
&#13;
        // _findChgModel Tests&#13;
        it('_findChgModel should return a valid sys_id when passed a valid model name', function() {&#13;
&#13;
            var model = (new x_neyu_modtrak.ChangeHelper())._findChgModel("normal");&#13;
            var reg = /([a-f0-9]){32}/g;&#13;
            expect(reg.test(model)).toBe(true);&#13;
&#13;
        });&#13;
&#13;
        it('_findChgModel should return null if an invalid model name is passed', function() {&#13;
&#13;
            expect((new x_neyu_modtrak.ChangeHelper())._findChgModel("asdf")).toBeNull();&#13;
&#13;
        });&#13;
&#13;
        // _resolveValue tests&#13;
        it('_resolveValue should return a valid sys_id if requested_by and a valid netid', function() {&#13;
&#13;
            var user = (new x_neyu_modtrak.ChangeHelper())._resolveValue("ab7289", "requested_by");&#13;
            var reg = /[a-f0-9]{32}/g;&#13;
            expect(reg.test(user)).toBe(true);&#13;
&#13;
        });&#13;
&#13;
        it('should return null if key is requested_by and value is not a valid netid', function() {&#13;
            expect(&#13;
                (new x_neyu_modtrak.ChangeHelper())._resolveValue("Alex Biehl", "requested_by")&#13;
            ).toBeNull();&#13;
        });&#13;
&#13;
        it('_resolveValue should return a valid sys_id if service_offering is valid', function() {&#13;
            var svc = (new x_neyu_modtrak.ChangeHelper())._resolveValue("NYU-NET (NYU IT)", "service_offering");&#13;
            var reg = /[a-f0-9]{32}/g;&#13;
            expect(reg.test(svc)).toBe(true);&#13;
        });&#13;
&#13;
        it('should return null if key is service_offering and value is not a valid offering', function() {&#13;
            expect(&#13;
                (new x_neyu_modtrak.ChangeHelper())._resolveValue("blah", "service_offering")&#13;
            ).toBeNull();&#13;
        });&#13;
&#13;
        it('_resolveValue should return the value itself if anything other than service_offering or requested_by', function() {&#13;
            var val = "test";&#13;
            var key = "requested_by_date";&#13;
            expect(&#13;
                (new x_neyu_modtrak.ChangeHelper())._resolveValue(val, key)&#13;
            ).toBe(val);&#13;
        });&#13;
&#13;
    });&#13;
&#13;
})(outputs, steps, params, stepResult, assertEqual);&#13;
// uncomment the next line to execute this script as a jasmine test&#13;
jasmine.getEnv().execute();</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
